{"version":3,"file":"js/211.23207a8f.js","mappings":"8JAOA,IAAIA,GAASC,EAAAA,EAAAA,MAAsB,GAExBC,GAAoBC,EAAAA,EAAAA,UAAU,CAErCC,MAAM,EACNC,KAAM,OACNC,QAAS,CACL,iBAAiB,GAErBC,MAAO,CACHC,KAAM,GACNC,OAAQ,IAEZT,QAAQU,EAAAA,EAAAA,WAA+B,KAAMC,EAAAA,EAAAA,GAAYX,EAAOY,SAEhEC,YAAcC,IACVd,EAAOY,MAAQE,CAAC,G,wFChBxB,IAAIC,EAAWC,GACJC,UACH,IACI,IAAIC,QAAYC,EAAAA,EAAAA,KAAc,kBAAkBC,KAAKJ,EAAIK,MAAMC,KAAK,CAAC,eACrEH,EAAAA,EAAAA,MAAAA,OAAAA,IAA2BH,EAAIO,MAAMF,KAAKG,SAAUN,EAAKF,EAAIS,KACrD,CAAV,MAAMC,GAAI,GAMhBC,EAAQX,GACDC,eAAkBE,EAAAA,EAAAA,KAAc,kBAAkBC,KAAKJ,EAAIS,KAAKG,QAAQC,OAAOb,EAAIS,KAAKK,MAG/FC,EAAeC,IACR,CACHA,OACAR,SAAUQ,EAAKC,KAAK,WACpBC,MAAOC,SAASH,EAAKI,OAAO,GAAG,IAC/BC,OAAQL,EAAKC,KAAK,OAItBK,EAAYtB,IAEZ,IAAI,GAAEuB,EAAE,KAAEC,EAAI,QAAEC,GAAYzB,EAAIS,KAAKG,OAEjCc,EAAa,CAACF,EAAMC,EAASF,GAAIN,KAAK,KAEtCU,EAAiC3B,EAAIgB,KAAKI,MAAM,GAAI,GAEpDQ,EAAsC,KAEhB,GAAvBD,EAAaE,SACZD,EAASb,EAAYY,IAGzB,IAAItB,EAAOU,EAAYf,EAAIgB,MAE3B,MAAO,CACHX,OACAuB,SACAhB,OAAQ,CAACc,EAAYrB,EAAKgB,QAASJ,KAAK,KAC3C,EAIDa,EAAS9B,MAELA,EAAI+B,aAAe/B,EAAIK,OAEpBJ,UACCD,EAAI+B,iBAEK/B,EAAI+B,WAAY5B,EAAAA,EAAAA,MAAAA,OAAAA,MAA6BH,EAAIK,OAFnC,IAM/B2B,EAAUhC,KACNA,EAAIiC,WACDhC,UAECD,EAAI4B,QAER5B,EAAI4B,OAAOrC,MAAQY,EAAAA,EAAAA,MAAAA,MAAAA,KAA0BH,EAAI4B,OAAOrC,MAAOS,EAAIO,MAAMF,KAAKa,OAKvE,IAPiB,IAW5Ba,EAAc/B,KACVA,EAAIiC,WACDhC,OAAMI,EAAgB6B,GAAiB,KAE1C,IAAIlC,EAAI4B,SAAW5B,EAAIO,MAAMqB,OAAS,MAAO,GAE7C,IAAI,MAAEV,GAAUlB,EAAIO,MAAMF,KACtB8B,EAAWD,EAAQhB,EAAQ,EAAIA,EAGnC,OADAlB,EAAI4B,OAAOrC,MAAQY,EAAAA,EAAAA,MAAAA,MAAAA,OAA4BH,EAAI4B,OAAOrC,MAAO4C,EAAU9B,GACpEL,EAAIO,MAAMqB,OAAOZ,KAAKoB,OAAOD,EAAS,GAIjDE,EAAcrC,KACVA,EAAIsC,UACDrC,OAAMI,EAAe8B,EAAmB,IAEvCnC,EAAIK,MAERL,EAAIK,KAAKd,MAAQY,EAAAA,EAAAA,MAAAA,MAAAA,OAA4BH,EAAIK,KAAKd,MAAO4C,EAAU9B,GAEhEL,EAAIO,MAAMF,KAAKW,KAAKoB,OAAOD,IAJZ,IAQ1BI,EAAUvC,KAONA,EAAIK,OAEDnB,EAAAA,EAAAA,MAAAA,KAAAA,MAAuBsD,MACtBxC,EAAIK,OAASL,EAAIK,KAAKoC,KACnBD,EAAMnC,KAAKkC,QAAUvC,EAAIK,KAAKkC,WAClC,GAGPG,EAAe1C,GAEXA,EAAIuC,QAAWvC,EAAIK,MAASnB,EAAAA,EAAAA,MAAAA,OAEzBA,EAAAA,EAAAA,MAAAA,OAAAA,QAA2ByD,IAC9B,GAAI3C,EAAIuC,OACR,OAAOvC,EAAIuC,OAAO9C,OAAOmD,SAASD,EAAMpB,GAAG,IAJa,GASrD5B,EAAekD,IAEtB,IAAIA,EAAQ,OAAO,EAEnB,IAAI,KAAE7B,EAAI,KAAEP,GAASoC,EAErB,IAAI7B,EAAM,OAAO,EAEjB,IAAIhB,GAAkBb,EAAAA,EAAAA,UAAU,CAE5BsB,OACAO,MAAMtB,EAAAA,EAAAA,UAA6B,CAC/BoD,IAAK,IAAO9B,EAIZ+B,IAAM/B,GAAS6B,EAAO7B,KAAOA,IAGjCT,OAAOb,EAAAA,EAAAA,WAAS,IAAM4B,EAAStB,KAC/BiC,WAAWvC,EAAAA,EAAAA,WAAU,IAA0B,MAApBM,EAAIO,MAAMqB,SACrCU,UAAU5C,EAAAA,EAAAA,WAAU,MAEZM,EAAIK,SAEDL,EAAIK,KAAKd,QAASyD,MAAMC,QAASjD,EAAIK,KAAKd,UAGrDc,MAAMX,EAAAA,EAAAA,WAAU,IAAMS,EAAAA,EAAAA,MAAAA,OAAAA,IAA2BH,EAAIO,MAAMF,KAAKG,SAAUC,KAE1EmB,QAAQlC,EAAAA,EAAAA,WAAS,OACTM,EAAIiC,YAAcjC,EAAIO,MAAMqB,UACzBzB,EAAAA,EAAAA,MAAAA,OAAAA,IAA2BH,EAAIO,MAAMqB,OAAOpB,SAAUC,KAAS,KAO1EqB,OAAYpC,EAAAA,EAAAA,WAAS,IAAIoC,EAAM9B,KAC/BgC,QAAYtC,EAAAA,EAAAA,WAAS,IAAIsC,EAAOhC,KAChC+B,YAAYrC,EAAAA,EAAAA,WAAS,IAAIqC,EAAW/B,KACpCqC,WAAY3C,EAAAA,EAAAA,WAAS,IAAI2C,EAAUrC,KAEnCuC,QAAQ7C,EAAAA,EAAAA,WAAS,IAAM6C,EAAOvC,KAC9B0C,YAAYhD,EAAAA,EAAAA,WAAS,IAAMgD,EAAW1C,KAEtCW,MAAMjB,EAAAA,EAAAA,WAAS,IAAMiB,EAAKX,KAC1BD,SAASL,EAAAA,EAAAA,WAAS,IAAMK,EAAQC,OAIpC,QAAKA,EAAIK,MAEFL,CAAG,C,qBCvLdkD,EAAQ,EAAU,CAACC,EAAKC,KACpB,MAAMC,EAASF,EAAIG,WAAaH,EAChC,IAAK,MAAOI,EAAKC,KAAQJ,EACrBC,EAAOE,GAAOC,EAElB,OAAOH,CAAM,C,iFCPX,SAAUI,EAAOC,EAAUC,EAAYC,EAAYC,EAAYC,EAAWC,GAC9E,MAAMC,GAAqBC,EAAAA,EAAAA,kBAAkB,WAE7C,OAAOC,EAAAA,EAAAA,kBAAiBC,EAAAA,EAAAA,cAAcC,EAAAA,EAAAA,cAAaC,EAAAA,EAAAA,yBAAyBX,EAAKjB,KAAK6B,EAAAA,EAAAA,YAAYZ,EAAKN,MAAO,CAC5GmB,MAAO,CAAC,yBAA0Bb,EAAKc,SACvCC,eAAgBf,EAAKgB,aACrBC,aAAchB,EAAO,KAAOA,EAAO,GAAMiB,GAAiBlB,EAAKmB,SAAU,GACzEC,aAAcnB,EAAO,KAAOA,EAAO,GAAMiB,GAAiBlB,EAAKmB,SAAU,KACvE,CACFE,SAASC,EAAAA,EAAAA,UAAS,IAAM,GACrBb,EAAAA,EAAAA,YAAW,IAAOc,EAAAA,EAAAA,oBAAoBC,EAAAA,SAAW,MAAMC,EAAAA,EAAAA,YAAYzB,EAAKnE,OAAO,CAACc,EAAM+E,MAC7EjB,EAAAA,EAAAA,cAAcC,EAAAA,EAAAA,cAAaC,EAAAA,EAAAA,yBAAyB,gBAAgBC,EAAAA,EAAAA,YAAYjE,EAAM,CAAE,UAAW+E,IAAM,KAAM,GAAI,CAAC,eAC1H,SAENC,EAAG,GACF,GAAI,CAAC,iBAAkB,WAAY,CACpC,CAACrB,EAAoB,CACbsB,QAAS5B,EAAK6B,WACdC,MAAO9B,EAAK+B,QACZC,SAAU,GACVC,UAAW,aACXC,YAAa,iCACbC,MAAO,KAGnB,C,wBCrBO,IAAIC,EAAS1C,IAEhB,IAAI3C,GAAgCsF,EAAAA,EAAAA,QAAO,4BAA6B,EAExE,IAAItF,EAAM,OAEV,IAAIoE,GAAU5F,EAAAA,EAAAA,MAAI,IAEd,KAAE+B,GAASgF,EAAa,yBAAbA,CAAuC5C,GAElDpD,GAAML,EAAAA,EAAAA,GAAY,CAACc,OAAMO,SAEzBhC,GAASU,EAAAA,EAAAA,WAAS,KAElB,GAAIR,EAAAA,GAAQF,QAAWE,EAAAA,GAAQF,QAAQuB,OAAUP,EAEjD,OAAGd,EAAAA,GAAQF,QAAQuB,OAAOK,QAAUZ,EAAIO,MAAMK,OAAe,cAA7D,CAAqE,IAIrEqF,GAAavG,EAAAA,EAAAA,WAAS,IAClBR,EAAAA,GAAQE,KACL,cAD0B,gBAIjC8G,GAAaxG,EAAAA,EAAAA,WAAS,IAClBR,EAAAA,GAAQF,OACL,cAD4B,kBAInCwF,GAAU9E,EAAAA,EAAAA,WAAS,IAAM,CACzBV,EAAOY,MACPsG,EAAWtG,MACXqG,EAAWrG,OACO,IAAlBiF,EAAQjF,MAAiB,UAAY,MAGrC6F,GAAU/F,EAAAA,EAAAA,WAAS,MACfR,EAAAA,GAAQE,MACQ,GAAjByF,EAAQjF,QAIXuG,EAAWC,EAAapG,GAE5B,MAAO,CACH0E,aAAc,KACV,GAAIjE,GAASvB,EAAAA,EAAAA,KACb,OAAOA,EAAAA,EAAAA,YAAoB,CACvB8B,OACAP,QACF,EAENoE,UACAL,UACAtF,OAAM,IACNc,MACAyF,UACAF,YAAY7F,EAAAA,EAAAA,WAAS,IACVyG,EAASE,KAAI3F,GACTA,EAAE6B,OAAO+D,QACjBrF,KAAK,SAGf,EAID+E,EAAgBO,GACRnD,IACJ,IAAIoD,GAAUT,EAAAA,EAAAA,QAAOQ,EAAc,IAC/BvF,EAAO,IAAKwF,EAASpD,EAAMqD,QAE/B,OADAC,EAAAA,EAAAA,SAASH,EAAavF,GACf,CAAEA,OAAM,EAInBoF,EAAgBpG,IAChB,IAAIuG,EAAc,iBACdC,GAAUT,EAAAA,EAAAA,QAAOQ,EAAc,IAC/BvF,EAAO,IAAKwF,EAASxG,GAEzB,OADA0G,EAAAA,EAAAA,SAASH,EAAavF,GACfA,CAAI,ECpFXoC,EAAQ,CACRqD,OAAQ,CACJjF,KAAM,CAACmF,OAAQC,QACfC,UAAU,GAEdpE,GAAIkE,OACJpH,MAAO,CACHiC,KAAMwB,OAEVI,MAAO0D,OACPC,KAAMD,OACNvE,OAAQoE,QAEZ,OACIK,KAAM,cACNlB,MAAK,EACL1C,S,UCbJ,MAAM6D,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASxD,KAEpE,QCDA,GAA4ByD,EAAAA,EAAAA,iBAAiB,CAC3CC,OAAQ,QACR/D,MAAO,CACLtC,KAAM,CACFU,KAAMsF,OACND,UAAU,GAEdjG,OAAQ,CACJY,KAAMsF,SAGZhB,MAAMsB,GAER,MAAMhE,EAAQgE,EAOd,OAHAV,EAAAA,EAAAA,SAAQ,yBAA0BtD,GAG3B,CAACM,EAAUC,MACRQ,EAAAA,EAAAA,cAAcC,EAAAA,EAAAA,cAAaiD,EAAAA,EAAAA,OAAOC,IAAahD,EAAAA,EAAAA,YAAYZ,EAAK5C,KAAM,CAAE,UAAW,SAAW,KAAM,IAE9G,IC5BA,MAAM,EAAc,EAEpB,O","sources":["webpack://test/./src/node-tree/editor/index.ts","webpack://test/./src/node-tree/editor/stores/generate-api.ts","webpack://test/./node_modules/vue-loader/dist/exportHelper.js","webpack://test/./src/node-tree/walker/index.vue?9422","webpack://test/./src/node-tree/walker/setup.ts","webpack://test/./src/node-tree/walker/index.vue?706e","webpack://test/./src/node-tree/walker/index.vue","webpack://test/./src/node-tree/root/index.vue?7a97","webpack://test/./src/node-tree/root/index.vue"],"sourcesContent":["\r\nimport type { TreeData, TreeEditor, TreeNodeApi } from \"@/node-tree/types\"\r\n\r\nimport { generateApi } from \"./stores/generate-api\"\r\n\r\nimport { reactive, ref, computed } from \"vue\"\r\n\r\nlet active = ref<TreeData | false>(false)  \r\n\r\nexport let editor:TreeEditor = reactive( {\r\n\r\n    show: true,\r\n    mode: \"edit\",\r\n    options: {\r\n        \"editor-active\": false\r\n    },\r\n    nodes: {\r\n        list: [],\r\n        fields: []\r\n    },\r\n    active: computed<TreeNodeApi | false>( () => generateApi(active.value) ),\r\n\r\n    triggerNode: (o: TreeData | false) => {\r\n        active.value = o\r\n    }\r\n\r\n} )\r\n","import { reactive, computed } from \"vue\"\r\nimport { $pockets } from \"@/pockets\"\r\n\r\nimport type { TreeData, TreeNode, TreeNodeApi, TreeNodeResolvedPath, TreeNodePathArray, TreeNodeSchema, TreeNodeSchemaField } from \"@/node-tree/types\"\r\n\r\nimport { editor } from \"@/node-tree/editor\"\r\n\r\nlet hydrate = (api: TreeNodeApi) => {\r\n    return async () => {\r\n        try {\r\n            let res = await $pockets.crud('node-tree/node').init(api.node).read(['hydrate:<='])\r\n            $pockets.utils.object.set( api.paths.node.resolved, res, api.tree)\r\n        } catch(e) {\r\n\r\n        }\r\n    }\r\n}\r\n\r\nlet save = (api: TreeNodeApi) => {\r\n    return async () => await $pockets.crud('node-tree/root').init(api.tree.source).update(api.tree.root)\r\n}\r\n\r\nlet resolvePath = (path: TreeNodePathArray ) : TreeNodeResolvedPath => {\r\n    return {\r\n        path,\r\n        resolved: path.join('.nodes.'),\r\n        index: parseInt(path.slice(-1)[0]),\r\n        joined: path.join('.'),\r\n    }\r\n}\r\n\r\nlet getPaths = (api:TreeNodeApi) => {\r\n    \r\n    let { ID, type, metaKey } = api.tree.source\r\n\r\n    let sourcePath = [type, metaKey, ID].join('.')\r\n    \r\n    let parentChunks:TreeNodePathArray = api.path.slice(0, -1)\r\n\r\n    let parent: null | TreeNodeResolvedPath = null;\r\n    \r\n    if(parentChunks.length != 0) {\r\n        parent = resolvePath(parentChunks)\r\n    }\r\n\r\n    let node = resolvePath(api.path)\r\n\r\n    return {\r\n        node,\r\n        parent,\r\n        source: [sourcePath, node.joined ].join('.')\r\n    }\r\n}\r\n\r\n\r\nlet clone = (api:TreeNodeApi) => {\r\n    \r\n    if(!api.addSibling || !api.node) return false;\r\n\r\n    return async(): Promise<TreeNodePathArray> => {\r\n        if(!api.addSibling) return []\r\n        \r\n        return await api.addSibling( $pockets.utils.object.clone( api.node ) )\r\n    }\r\n}\r\n\r\nlet remove = (api:TreeNodeApi) => {\r\n    if(!api.hasParent) return false;\r\n    return async(): Promise<TreeNodePathArray> => {\r\n\r\n        if(!api.parent)  return []\r\n\r\n        api.parent.nodes = $pockets.utils.array.omit(api.parent.nodes, api.paths.node.index)\r\n        \r\n        /**\r\n            do Logic here to return previous sibling or parent path\r\n        */\r\n        return []\r\n    }\r\n}\r\n\r\nlet addSibling = (api:TreeNodeApi) => {\r\n    if(!api.hasParent) return false;\r\n    return async(node: TreeNode, after: boolean = true): Promise<TreeNodePathArray> => {\r\n        \r\n        if(!api.parent || !api.paths.parent)  return []\r\n\r\n        let { index } = api.paths.node\r\n        let addIndex = after ? index + 1 : index \r\n        \r\n        api.parent.nodes = $pockets.utils.array.insert(api.parent.nodes, addIndex, node)\r\n        return api.paths.parent.path.concat(addIndex)\r\n    }\r\n}\r\n\r\nlet addInside = ( api:TreeNodeApi ) => {\r\n    if(!api.hasNodes) return false;\r\n    return async(node:TreeNode, addIndex: number = 0): Promise<TreeNodePathArray> => {\r\n        \r\n        if(!api.node)  return []\r\n\r\n        api.node.nodes = $pockets.utils.array.insert(api.node.nodes, addIndex, node)\r\n        \r\n        return api.paths.node.path.concat(addIndex)\r\n    }\r\n}\r\n\r\nlet schema = (api:TreeNodeApi) : false | TreeNodeSchema => {\r\n    \r\n    /**\r\n        in here I would change entry.node.model == api.node.model\r\n    */\r\n\r\n\r\n    if(!api.node) return false\r\n    \r\n    return editor.nodes.list.find(entry => {\r\n        if(!api.node || !api.node.el) return false;\r\n        return entry.node.schema == api.node.schema\r\n    } ) ?? false\r\n}\r\n\r\nlet editFields =  (api:TreeNodeApi) : Array<TreeNodeSchemaField> => {\r\n    \r\n    if(!api.schema || !api.node || !editor.nodes.fields) return []\r\n    \r\n    return editor.nodes.fields.filter(field => {\r\n        if(!api.schema) return;\r\n        return api.schema.fields.includes(field.ID)\r\n    })\r\n\r\n\r\n}\r\nexport let generateApi = (object:TreeData | false) : TreeNodeApi | false => {\r\n    \r\n    if(!object) return false;\r\n    \r\n    let { path, tree } = object \r\n    \r\n    if(!path) return false;\r\n\r\n    let api:TreeNodeApi = reactive( {\r\n        \r\n        tree,\r\n        path: computed<TreeNodePathArray>( {\r\n            get: () =>  path,\r\n            /**\r\n                path can be changed directly in the api, allowing it to traverse the tree as it needs.\r\n            */\r\n            set: (path) => object.path = path\r\n        } ),\r\n\r\n        paths: computed(() => getPaths(api) ),\r\n        hasParent: computed( () => api.paths.parent != null),\r\n        hasNodes: computed( () => {\r\n            \r\n            if(!api.node)  return false;\r\n\r\n            return api.node.nodes && Array.isArray( api.node.nodes ) ? true : false\r\n\r\n        } ) ,\r\n        node: computed( () => $pockets.utils.object.get( api.paths.node.resolved, tree) ),\r\n\r\n        parent: computed(() => {\r\n            if(!api.hasParent || !api.paths.parent) return false;\r\n            return $pockets.utils.object.get( api.paths.parent.resolved, tree) ?? false\r\n        }),\r\n\r\n        /*\r\n            Actions\r\n        */\r\n\r\n        clone:      computed(()=>clone(api)),\r\n        remove:     computed(()=>remove(api)),\r\n        addSibling: computed(()=>addSibling(api)),\r\n        addInside:  computed(()=>addInside(api)),\r\n\r\n        schema: computed(() => schema(api)),\r\n        editFields: computed(() => editFields(api) ),\r\n\r\n        save: computed(() => save(api)),\r\n        hydrate: computed(() => hydrate(api)),\r\n    } )\r\n\r\n\r\n    if( !api.node ) return false\r\n\r\n    return api\r\n    \r\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// runtime helper for setting properties on components\n// in a tree-shakable way\nexports.default = (sfc, props) => {\n    const target = sfc.__vccOpts || sfc;\n    for (const [key, val] of props) {\n        target[key] = val;\n    }\n    return target;\n};\n","import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveDynamicComponent as _resolveDynamicComponent, mergeProps as _mergeProps, createBlock as _createBlock, resolveDirective as _resolveDirective, withCtx as _withCtx, withDirectives as _withDirectives } from \"vue\"\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _directive_tooltip = _resolveDirective(\"tooltip\")!\n\n  return _withDirectives((_openBlock(), _createBlock(_resolveDynamicComponent(_ctx.el), _mergeProps(_ctx.props, {\n    class: [\"pockets-node-tree-node\", _ctx.classes],\n    onClickCapture: _ctx.clickHandler,\n    onMouseenter: _cache[0] || (_cache[0] = ($event: any) => (_ctx.hovered = true)),\n    onMouseleave: _cache[1] || (_cache[1] = ($event: any) => (_ctx.hovered = false))\n  }), {\n    default: _withCtx(() => [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.nodes, (node, i) => {\n        return (_openBlock(), _createBlock(_resolveDynamicComponent(\"tree-walker\"), _mergeProps(node, { \"node-id\": i }), null, 16, [\"node-id\"]))\n      }), 256))\n    ]),\n    _: 1\n  }, 16, [\"onClickCapture\", \"class\"])), [\n    [_directive_tooltip, { \r\n            content: _ctx.tipContent, \r\n            shown: _ctx.showTip, \r\n            triggers: [], \r\n            placement: \"auto-start\", \r\n            popperClass: \"pockets-node-tree-node-overlay\",\r\n            delay: 1\r\n        }]\n  ])\n}","\r\nimport { editor } from \"@/node-tree/editor\"\r\nimport { generateApi  } from \"@/node-tree/editor/stores/generate-api\"\r\nimport { TreeData } from \"@/node-tree/types\"\r\nimport { inject, provide, computed, ref } from \"vue\"\r\n\r\nexport let setup = (props) => {\r\n    \r\n    let tree:TreeData['tree'] | false = inject('pockets-node-tree-root') ?? false\r\n\r\n    if(!tree) return;\r\n    \r\n    let hovered = ref(false)\r\n\r\n    let { path } = pathProvider('pockets-node-tree-path')(props)\r\n\r\n    let api = generateApi({tree, path})\r\n\r\n    let active = computed(() => {\r\n        \r\n        if(!editor?.active || !editor?.active?.paths || !api) return\r\n\r\n        if(editor?.active?.paths?.source == api.paths.source) return \"active\"\r\n\r\n    })\r\n\r\n    let editorShow = computed(() => {\r\n        if(!editor?.show ?? null) return \"editor-hide\"\r\n        return \"editor-show\"\r\n    })\r\n\r\n    let editorOpen = computed(() => {\r\n        if(!editor?.active ?? null) return \"editor-closed\"\r\n        return \"editor-open\"\r\n    })\r\n\r\n    let classes = computed(() => [\r\n        active.value, \r\n        editorOpen.value, \r\n        editorShow.value,\r\n        hovered.value === true ? \"hovered\" : \"\"\r\n    ])\r\n\r\n    let showTip = computed(() => {\r\n        if(!editor?.show ?? null) return false\r\n        if(hovered.value == true) return true\r\n        return false\r\n    })\r\n    \r\n    let hiearchy = nodeHiearchy(api)\r\n\r\n    return {\r\n        clickHandler: () =>  {\r\n            if(!tree || !editor.show) return\r\n            return editor.triggerNode( {\r\n                path, \r\n                tree\r\n            })\r\n        },\r\n        hovered,\r\n        classes,\r\n        editor,\r\n        api,\r\n        showTip,\r\n        tipContent: computed(() => {\r\n            return hiearchy.map(e => {\r\n                return e.schema.title\r\n            }).join(' > ')\r\n        }),\r\n\r\n    }\r\n\r\n}\r\n\r\nlet pathProvider = (providerKey: string) => {\r\n    return (props) => {\r\n        let current = inject(providerKey , [] )\r\n        let path = [ ...current, props.nodeId ]\r\n        provide( providerKey, path)\r\n        return { path }\r\n    }\r\n}\r\n\r\nlet nodeHiearchy = (api: any ) => {\r\n    let providerKey = 'a-test-of-this'    \r\n    let current = inject(providerKey , [] )\r\n    let path = [ ...current, api ]\r\n    provide( providerKey, path)\r\n    return path\r\n}\r\n\r\n\r\n\r\n","\r\nimport { setup } from \"./setup\"\r\nimport type { TreeNode } from \"@/node-tree/types\"\r\n\r\nlet props = {\r\n    nodeId: {\r\n        type: [String, Number],\r\n        required: true\r\n    },\r\n    el: String,\r\n    nodes: {\r\n        type: Array,\r\n    },\r\n    props: Object,\r\n    data: Object,\r\n    schema: String\r\n}\r\nexport default {\r\n    name: \"tree-walker\",\r\n    setup,\r\n    props\r\n}\r\n","import { render } from \"./index.vue?vue&type=template&id=2f25e75a&ts=true\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=2f25e75a&lang=scss\"\n\nimport exportComponent from \"C:\\\\Users\\\\Justin\\\\Documents\\\\Workspace\\\\xampp\\\\apps\\\\pockets\\\\htdocs\\\\wp-content\\\\plugins\\\\pockets\\\\vue\\\\dev\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, mergeProps as _mergeProps, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport treeWalker from \"@/node-tree/walker\"\r\nimport { provide } from \"vue\"\r\nimport type { TreeData } from \"@/node-tree/types\"\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: {\r\n    root: {\r\n        type: Object,\r\n        required: true\r\n    },\r\n    source: {\r\n        type: Object,\r\n    }\r\n} as TreeData,\n  setup(__props) {\n\nconst props = __props;\n\r\n\r\n\r\nprovide('pockets-node-tree-root', props )\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(_unref(treeWalker), _mergeProps(_ctx.root, { \"node-id\": \"root\" }), null, 16))\n}\n}\n\n})","import script from \"./index.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./index.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["active","ref","editor","reactive","show","mode","options","nodes","list","fields","computed","generateApi","value","triggerNode","o","hydrate","api","async","res","$pockets","init","node","read","paths","resolved","tree","e","save","source","update","root","resolvePath","path","join","index","parseInt","slice","joined","getPaths","ID","type","metaKey","sourcePath","parentChunks","parent","length","clone","addSibling","remove","hasParent","after","addIndex","concat","addInside","hasNodes","schema","entry","el","editFields","field","includes","object","get","set","Array","isArray","exports","sfc","props","target","__vccOpts","key","val","render","_ctx","_cache","$props","$setup","$data","$options","_directive_tooltip","_resolveDirective","_withDirectives","_openBlock","_createBlock","_resolveDynamicComponent","_mergeProps","class","classes","onClickCapture","clickHandler","onMouseenter","$event","hovered","onMouseleave","default","_withCtx","_createElementBlock","_Fragment","_renderList","i","_","content","tipContent","shown","showTip","triggers","placement","popperClass","delay","setup","inject","pathProvider","editorShow","editorOpen","hiearchy","nodeHiearchy","map","title","providerKey","current","nodeId","provide","String","Number","required","Object","data","name","__exports__","_defineComponent","__name","__props","_unref","treeWalker"],"sourceRoot":""}